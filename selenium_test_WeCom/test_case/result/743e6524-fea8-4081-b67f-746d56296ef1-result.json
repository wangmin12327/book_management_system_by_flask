{"name": "用例标题：添加成员信息成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF73AA5FDA5+29557]\n\t(No symbol) [0x00007FF73A9D2240]\n\t(No symbol) [0x00007FF73A88B6EA]\n\t(No symbol) [0x00007FF73A8741C7]\n\t(No symbol) [0x00007FF73A873ECA]\n\t(No symbol) [0x00007FF73A871D52]\n\t(No symbol) [0x00007FF73A8725AF]\n\t(No symbol) [0x00007FF73A89A100]\n\t(No symbol) [0x00007FF73A937E9A]\n\t(No symbol) [0x00007FF73A9074FA]\n\t(No symbol) [0x00007FF73A9288A3]\n\t(No symbol) [0x00007FF73A9072A3]\n\t(No symbol) [0x00007FF73A8D12DF]\n\t(No symbol) [0x00007FF73A8D2451]\n\tGetHandleVerifier [0x00007FF73AD8DCBD+3363469]\n\tGetHandleVerifier [0x00007FF73ADD9B47+3674391]\n\tGetHandleVerifier [0x00007FF73ADCEAEB+3629243]\n\tGetHandleVerifier [0x00007FF73AB1FC66+815670]\n\t(No symbol) [0x00007FF73A9DD6EF]\n\t(No symbol) [0x00007FF73A9D92B4]\n\t(No symbol) [0x00007FF73A9D9450]\n\t(No symbol) [0x00007FF73A9C81FF]\n\tBaseThreadInitThunk [0x00007FFA53F3257D+29]\n\tRtlUserThreadStart [0x00007FFA5570AF08+40]", "trace": "self = <selenium_test_WeCom.test_case.test_wecom.TestWeCom object at 0x000002989B85C320>\nname = 'Tony', account = 'test_01', phone_number = '12345678899'\nbusiness_mail = '1585736247@qq.com'\n\n    @allure.title(\"用例标题：添加成员信息成功\")\n    @pytest.mark.parametrize(\"name, account, phone_number, business_mail\",\n                             get_data())\n    def test_add_member(self, name, account, phone_number, business_mail):\n        \"\"\"\n        添加成员信息\n        1、输入 姓名、企业邮箱、手机号\n        2、截图\n        3、点击保存\n        4、多断言：\n          所有的成员姓名是否包含添加时输入的姓名；\n          所有的成员手机号是否包含添加时输入的手机号；\n          所有的成员邮箱是否包含添加时输入的邮箱。\n        :return: 跳转到通讯录页\n        \"\"\"\n>       member_list = self.home.go_to_contacts(). \\\n            add_member(name, account, phone_number, business_mail)\n\ntest_wecom.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page_obj\\home_page.py:22: in go_to_contacts\n    self.get_screen_shot()\n..\\page_obj\\base_page.py:99: in get_screen_shot\n    self.driver.save_screenshot(image_path)\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:822: in save_screenshot\n    return self.get_screenshot_as_file(filename)\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:798: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:832: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:843: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002989C23FCE0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"timeout: Timed out receiving message from renderer: 1...07FF73A9C81FF]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA53F3257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA5570AF08+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000\nE         (Session info: chrome=129.0.6668.100)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF73AA5FDA5+29557]\nE       \t(No symbol) [0x00007FF73A9D2240]\nE       \t(No symbol) [0x00007FF73A88B6EA]\nE       \t(No symbol) [0x00007FF73A8741C7]\nE       \t(No symbol) [0x00007FF73A873ECA]\nE       \t(No symbol) [0x00007FF73A871D52]\nE       \t(No symbol) [0x00007FF73A8725AF]\nE       \t(No symbol) [0x00007FF73A89A100]\nE       \t(No symbol) [0x00007FF73A937E9A]\nE       \t(No symbol) [0x00007FF73A9074FA]\nE       \t(No symbol) [0x00007FF73A9288A3]\nE       \t(No symbol) [0x00007FF73A9072A3]\nE       \t(No symbol) [0x00007FF73A8D12DF]\nE       \t(No symbol) [0x00007FF73A8D2451]\nE       \tGetHandleVerifier [0x00007FF73AD8DCBD+3363469]\nE       \tGetHandleVerifier [0x00007FF73ADD9B47+3674391]\nE       \tGetHandleVerifier [0x00007FF73ADCEAEB+3629243]\nE       \tGetHandleVerifier [0x00007FF73AB1FC66+815670]\nE       \t(No symbol) [0x00007FF73A9DD6EF]\nE       \t(No symbol) [0x00007FF73A9D92B4]\nE       \t(No symbol) [0x00007FF73A9D9450]\nE       \t(No symbol) [0x00007FF73A9C81FF]\nE       \tBaseThreadInitThunk [0x00007FFA53F3257D+29]\nE       \tRtlUserThreadStart [0x00007FFA5570AF08+40]\n\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: TimeoutException"}, "description": "\n        添加成员信息\n        1、输入 姓名、企业邮箱、手机号\n        2、截图\n        3、点击保存\n        4、多断言：\n          所有的成员姓名是否包含添加时输入的姓名；\n          所有的成员手机号是否包含添加时输入的手机号；\n          所有的成员邮箱是否包含添加时输入的邮箱。\n        :return: 跳转到通讯录页\n        ", "steps": [{"name": "用例步骤1：在首页点击通讯录按钮，进入到通讯录页面，并截图成功", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 10.000\n  (Session info: chrome=129.0.6668.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF73AA5FDA5+29557]\n\t(No symbol) [0x00007FF73A9D2240]\n\t(No symbol) [0x00007FF73A88B6EA]\n\t(No symbol) [0x00007FF73A8741C7]\n\t(No symbol) [0x00007FF73A873ECA]\n\t(No symbol) [0x00007FF73A871D52]\n\t(No symbol) [0x00007FF73A8725AF]\n\t(No symbol) [0x00007FF73A89A100]\n\t(No symbol) [0x00007FF73A937E9A]\n\t(No symbol) [0x00007FF73A9074FA]\n\t(No symbol) [0x00007FF73A9288A3]\n\t(No symbol) [0x00007FF73A9072A3]\n\t(No symbol) [0x00007FF73A8D12DF]\n\t(No symbol) [0x00007FF73A8D2451]\n\tGetHandleVerifier [0x00007FF73AD8DCBD+3363469]\n\tGetHandleVerifier [0x00007FF73ADD9B47+3674391]\n\tGetHandleVerifier [0x00007FF73ADCEAEB+3629243]\n\tGetHandleVerifier [0x00007FF73AB1FC66+815670]\n\t(No symbol) [0x00007FF73A9DD6EF]\n\t(No symbol) [0x00007FF73A9D92B4]\n\t(No symbol) [0x00007FF73A9D9450]\n\t(No symbol) [0x00007FF73A9C81FF]\n\tBaseThreadInitThunk [0x00007FFA53F3257D+29]\n\tRtlUserThreadStart [0x00007FFA5570AF08+40]\n\n", "trace": "  File \"D:\\开发项目\\selenium_test_WeCom\\page_obj\\home_page.py\", line 22, in go_to_contacts\n    self.get_screen_shot()\n  File \"D:\\开发项目\\selenium_test_WeCom\\page_obj\\base_page.py\", line 99, in get_screen_shot\n    self.driver.save_screenshot(image_path)\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 822, in save_screenshot\n    return self.get_screenshot_as_file(filename)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 798, in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 832, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 843, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1728659816144, "stop": 1728659879333}], "attachments": [{"name": "log", "source": "f1604e91-08c1-4430-a6ff-da0f15c843f9-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'Tony'"}, {"name": "account", "value": "'test_01'"}, {"name": "phone_number", "value": "'12345678899'"}, {"name": "business_mail", "value": "'1585736247@qq.com'"}], "start": 1728659816144, "stop": 1728659879346, "uuid": "a8a8cae4-7a5b-43ac-9c25-5d2c1e2db12e", "historyId": "90c4bf5a4f0bb02e5ef2942aacbef707", "testCaseId": "97a9c77420122ccf37d2d3af803f5a78", "fullName": "test_case.test_wecom.TestWeCom#test_add_member", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_wecom"}, {"name": "subSuite", "value": "TestWeCom"}, {"name": "host", "value": "wangmin"}, {"name": "thread", "value": "10168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_wecom"}]}