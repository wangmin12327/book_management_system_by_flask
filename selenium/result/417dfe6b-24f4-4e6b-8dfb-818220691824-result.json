{"name": "test_baidu", "status": "broken", "statusDetails": {"message": "Exception", "trace": "self = <selenium_demo2.TestBaidu object at 0x000001D1D13FF020>\n\n    def test_baidu(self):\n        \"\"\"\n        1、实现代码异常时，截图/打印page_source\n        实现方法： try catch 配合截图/ page_source操作\n    \n        :return:\n        \"\"\"\n        self.driver = webdriver.Chrome()\n        self.driver.get(\"https://www.baidu.com/\")\n    \n        try:\n            # 如果发生异常\n            self.driver.find_element(By.ID, \"su1\")\n    \n        except:\n            # 出现异常的处理\n            print(\"出现异常啦\")\n            # 截图操作\n            timestamp = int(time.time())\n            # 提前创建好 images 路径\n            image_path = f\"./images/image_{timestamp}.PNG\"\n            # 截图\n            self.driver.save_screenshot(image_path)\n            # 将截图放到报告的数据中\n            allure.attach.file(image_path, name=\"picture\", attachment_type=allure.attachment_type.PNG)\n    \n            # 提前创建好 page_source 路径\n            timestamp = int(time.time())\n            page_source_path = f\"./page_source/page_source_{timestamp}.HTML\"\n            # 记录 page_source\n            with open(page_source_path, \"w\", encoding=\"u8\") as f:\n                f.write(self.driver.page_source)\n            # 将 page_source 放到报告的数据中,如果想要 html源码格式 使用 text, 如果想要 网页格式 就用 html\n            allure.attach.file(page_source_path, name=\"page_source\", attachment_type=allure.attachment_type.TEXT)\n            allure.attach.file(page_source_path, name=\"page_source\", attachment_type=allure.attachment_type.HTML)\n>       raise Exception\nE       Exception\n\nselenium_demo2.py:128: Exception"}, "description": "\n        1、实现代码异常时，截图/打印page_source\n        实现方法： try catch 配合截图/ page_source操作\n\n        :return:\n        ", "attachments": [{"name": "picture", "source": "160f2e32-63ab-41c1-bc1f-2fd5dd08a50b-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "1e39868d-1d9f-4b8a-bd80-8f2cd7be5b56-attachment.txt", "type": "text/plain"}, {"name": "page_source", "source": "a8345ba6-2d49-4617-a4f1-dab25c08d032-attachment.html", "type": "text/html"}, {"name": "log", "source": "a73959a5-37ca-4da8-8a54-c12a9f432710-attachment.txt", "type": "text/plain"}], "start": 1728022848299, "stop": 1728022850951, "uuid": "9e842c81-001c-44d0-bd07-9a869791f0a0", "historyId": "14872adf14105248a7eb022ed59b4ea6", "testCaseId": "14872adf14105248a7eb022ed59b4ea6", "fullName": "selenium_demo2.TestBaidu#test_baidu", "labels": [{"name": "suite", "value": "selenium_demo2"}, {"name": "subSuite", "value": "TestBaidu"}, {"name": "host", "value": "wangmin"}, {"name": "thread", "value": "12016-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "selenium_demo2"}]}