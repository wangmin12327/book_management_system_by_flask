{"name": "test_add_commodity[1450638-王者农药01]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[for='goodsSn']+.el-form-item__content .el-input__inner\"}\n  (Session info: chrome=125.0.6422.142); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF65BFE1F22+60322]\n\t(No symbol) [0x00007FF65BF5CE99]\n\t(No symbol) [0x00007FF65BE17EBA]\n\t(No symbol) [0x00007FF65BE67676]\n\t(No symbol) [0x00007FF65BE6773C]\n\t(No symbol) [0x00007FF65BEAE967]\n\t(No symbol) [0x00007FF65BE8C25F]\n\t(No symbol) [0x00007FF65BEABC80]\n\t(No symbol) [0x00007FF65BE8BFC3]\n\t(No symbol) [0x00007FF65BE59617]\n\t(No symbol) [0x00007FF65BE5A211]\n\tGetHandleVerifier [0x00007FF65C2F946D+3301613]\n\tGetHandleVerifier [0x00007FF65C343693+3605267]\n\tGetHandleVerifier [0x00007FF65C339410+3563664]\n\tGetHandleVerifier [0x00007FF65C0942F6+790390]\n\t(No symbol) [0x00007FF65BF674DF]\n\t(No symbol) [0x00007FF65BF633D4]\n\t(No symbol) [0x00007FF65BF63562]\n\t(No symbol) [0x00007FF65BF52F6F]\n\tBaseThreadInitThunk [0x00007FFB9482257D+29]\n\tRtlUserThreadStart [0x00007FFB95D6AA48+40]", "trace": "self = <test_litemall.test_litemall_po.TestLiteMall object at 0x000001D05F8894F0>\ncategory_num = '1450638', category_name = '王者农药01'\n\n    @pytest.mark.parametrize(\"category_num, category_name\",\n                             [[\"1450638\", \"王者农药01\"], [\"1450639\", \"王者农药02\"]])\n    def test_add_commodity(self, category_num, category_name):\n        \"\"\"\n        新增商品\n        1、点击首页\n        2、点击商品管理\n        3、点击商品列表\n        4、点击添加按钮\n        5、生成截图到allure测试报告中\n        6、断言，商品列表中是否存在新添加的商品\n        7、处理脏数据\n        :return:\n        \"\"\"\n        \"\"\"首页，跳转到商品列表页\"\"\"\n        \"\"\"商品列表页，跳转到商品上架页\"\"\"\n        \"\"\"商品列表页，跳回到商品列表页\"\"\"\n        list_page = self.home. \\\n            go_category_List_page(). \\\n            go_category_add_page(). \\\n>           create_category(category_num, category_name)\n\ntest_litemall_po.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\page_object\\category_create_page.py:25: in create_category\n    self.do_send_keys(f\"{category_num}\", self.__INPUT_NUMBER)\n..\\page_object\\base_page.py:79: in do_send_keys\n    ele = self.do_find(by, locator)\n..\\page_object\\base_page.py:52: in do_find\n    return self.driver.find_element(*by)\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D060691280>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF65BF52F6F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB9482257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB95D6AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[for='goodsSn']+.el-form-item__content .el-input__inner\"}\nE         (Session info: chrome=125.0.6422.142); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF65BFE1F22+60322]\nE       \t(No symbol) [0x00007FF65BF5CE99]\nE       \t(No symbol) [0x00007FF65BE17EBA]\nE       \t(No symbol) [0x00007FF65BE67676]\nE       \t(No symbol) [0x00007FF65BE6773C]\nE       \t(No symbol) [0x00007FF65BEAE967]\nE       \t(No symbol) [0x00007FF65BE8C25F]\nE       \t(No symbol) [0x00007FF65BEABC80]\nE       \t(No symbol) [0x00007FF65BE8BFC3]\nE       \t(No symbol) [0x00007FF65BE59617]\nE       \t(No symbol) [0x00007FF65BE5A211]\nE       \tGetHandleVerifier [0x00007FF65C2F946D+3301613]\nE       \tGetHandleVerifier [0x00007FF65C343693+3605267]\nE       \tGetHandleVerifier [0x00007FF65C339410+3563664]\nE       \tGetHandleVerifier [0x00007FF65C0942F6+790390]\nE       \t(No symbol) [0x00007FF65BF674DF]\nE       \t(No symbol) [0x00007FF65BF633D4]\nE       \t(No symbol) [0x00007FF65BF63562]\nE       \t(No symbol) [0x00007FF65BF52F6F]\nE       \tBaseThreadInitThunk [0x00007FFB9482257D+29]\nE       \tRtlUserThreadStart [0x00007FFB95D6AA48+40]\n\nD:\\python3\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "\n        新增商品\n        1、点击首页\n        2、点击商品管理\n        3、点击商品列表\n        4、点击添加按钮\n        5、生成截图到allure测试报告中\n        6、断言，商品列表中是否存在新添加的商品\n        7、处理脏数据\n        :return:\n        ", "attachments": [{"name": "log", "source": "00b35d30-ff4a-4e97-a6de-32d7f014cada-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "category_num", "value": "'1450638'"}, {"name": "category_name", "value": "'王者农药01'"}], "start": 1717772760684, "stop": 1717772767900, "uuid": "c2808481-4ef6-4928-a3cc-4b4bdf117aa3", "historyId": "9ab2eb49dbb7ede10777311ea1d6f598", "testCaseId": "f94339408c4db42592925df4b6375eca", "fullName": "test_litemall.test_litemall_po.TestLiteMall#test_add_commodity", "labels": [{"name": "parentSuite", "value": "test_litemall"}, {"name": "suite", "value": "test_litemall_po"}, {"name": "subSuite", "value": "TestLiteMall"}, {"name": "host", "value": "wangmin"}, {"name": "thread", "value": "19184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_litemall.test_litemall_po"}]}